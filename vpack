#! /usr/bin/env python3
# -*- coding:utf-8 -*-
# Copyright 2018-  <linrongbin16@gmail.com>

import sys
import os
import click

sys.path.append(".")
import util


def compress_target(filename, option):
    if option == "targz" or option == "tgz":
        target = "%s.tar.gz" % filename
        util.backup_file(target)
        os.system('tar czvf "%s" "%s"' % (target, filename))
    elif option == "tarbz2":
        target = "%s.tar.bz2" % filename
        util.backup_file(target)
        os.system('tar czvf "%s" "%s"' % (target, filename))
    elif option == "tar":
        target = "%s.tar" % filename
        util.backup_file(target)
        os.system('tar cvf "%s" "%s"' % (target, filename))
    elif option == "zip":
        target = "%s.zip" % filename
        util.backup_file(target)
        os.system('zip -r "%s" "%s"' % (target, filename))
    else:
        print("[vcmd] compress filetype:%s is not support, exit..." % (option))


def extract_target(filename):
    if filename.endswith(".tar.gz") or filename.endswith(".tgz"):
        os.system('tar zxvf "%s"' % (filename))
    elif filename.endswith(".tar.bz2"):
        os.system('tar xvf "%s"' % (filename))
    elif filename.endswith(".tar"):
        os.system('tar xvf "%s"' % (filename))
    elif filename.endswith(".zip"):
        os.system('unzip "%s"' % (filename))
    elif filename.endswith(".7z"):
        os.system('7z x "%s"' % (filename))
    elif filename.endswith(".jar"):
        os.system('jar xf "%s"' % (filename))
    else:
        print("[vcmd] file:%s extract is not support, exit..." % (filename))


@click.command()
@click.option(
    "-c",
    "--compress",
    type=click.Choice(["targz", "tgz", "tarbz2", "tar", "zip", "7z"]),
    help=
    "compress file/directory with specified compress algorithm, by default: targz"
)
@click.option("-e",
              "--extract",
              is_flag=True,
              help="extract compressed file with detected filetype")
@click.argument("args", nargs=-1)
def vpack(compress: str, extract: bool, args):
    """
Compression and extraction.

Example:

\b
$ vpack -e date-3.0.1.tar.gz
x date-3.0.1/
x date-3.0.1/.gitignore
x date-3.0.1/.travis.yml
x date-3.0.1/CMakeLists.txt
x date-3.0.1/LICENSE.txt
x date-3.0.1/README.md
x date-3.0.1/ci/
x date-3.0.1/ci/install_cmake.sh
x date-3.0.1/cmake/
x date-3.0.1/cmake/dateConfig.cmake
x date-3.0.1/compile_fail.sh
x date-3.0.1/include/
x date-3.0.1/include/date/
x date-3.0.1/include/date/chrono_io.h
x date-3.0.1/include/date/date.h
...
"""
    if compress:
        compress_target(args[0], compress)
    elif extract:
        extract_target(args[0])
    else:
        print(
            "[vcmd] unknown option, please try `vpack --help` for more information"
        )


if __name__ == "__main__":
    vpack()
