#! /usr/bin/env python3
# -*- coding:utf-8 -*-
# Copyright 2018-  <linrongbin16@gmail.com>

import sys
import os
import click

sys.path.append(".")
import common.msg as cmsg
import common.sys as csys
import common.gt as cgt


def list_local_branch(debug):
    outs, _ = csys.run("git branch")
    for o in outs:
        cmsg.echo(o.strip())


def list_remote_branch(debug):
    outs, _ = csys.run("git branch -r")
    for o in outs:
        cmsg.echo(o.strip())


def create_branch(name, debug):
    cgt.check_repo()
    os.system(f"git checkout -b {name}")


def switch_branch(name, debug):
    cgt.check_repo()
    os.system(f"git checkout {name}")


def delete_branch(name, debug):
    cgt.check_repo()
    os.system(f"git branch -d {name}")


@click.command()
@click.option(
    "-l",
    "--list-local",
    is_flag=True,
    help="List all local branches",
)
@click.option(
    "-r",
    "--list-remote",
    is_flag=True,
    help="List all remote branches",
)
@click.option("-c", "--create", required=False, help="Create new branch")
@click.option("-s",
              "--switch",
              required=False,
              help="Switch to another branch")
@click.option("-d", "--delete", required=False, help="Delete a branch")
@click.option("--debug", is_flag=True, help="debug mode")
def vgbr(list_local, list_remote, create, switch, delete, debug):
    """
Git Branch Commands

Example:

\b
```
$ vgbr -r
[vcmd] origin/HEAD -> origin/main
[vcmd] origin/main
```
    """
    if debug:
        print(
            f"list_local:{list_local}, list_remote:{list_remote}, create:{create}, switch:{switch}, delete:{delete}, debug:{debug}"
        )
    if list_local:
        list_local_branch(debug)
    elif list_remote:
        list_remote_branch(debug)
    elif create:
        create_branch(create, debug)
    elif switch:
        switch_branch(switch, debug)
    elif delete:
        delete_branch(delete, debug)
    else:
        cmsg.unknown_option()


if __name__ == "__main__":
    vgbr()
