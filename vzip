#!/usr/bin/env python3
# -*- coding:utf-8 -*-
# Copyright 2018-  <linrongbin16@gmail.com>

import sys
import os
import click

sys.path.append(".")
import common.msg as cmsg
import common.fs as cfs


# for tar.gz, tgz, tar.bz2
def compress_by_tar(targets, extension, debug):
    if debug:
        cmsg.debug(f"compress x.{extension} for: {targets}")
    for src in targets:
        dst = f"{src}.{extension}"
        cfs.backup(dst)
        os.system(f'tar czf "{dst}" "{src}"')
        cmsg.echo(f"compressed {dst} - done")


# for zip, 7z
def compress_by_7z(targets, extension, debug):
    if debug:
        cmsg.debug(f"compress x.{extension} for: {targets}")
    for src in targets:
        dst = f"{src}.{extension}"
        cfs.backup(dst)
        os.system(f'7z a "{dst}" "{src}"')
        cmsg.echo(f"compressed {dst} - done")


@click.command()
@click.option("--tar-gz", is_flag=True, help="output x.tar.gz")
@click.option("--tgz", is_flag=True, help="output x.tgz")
@click.option("--tar-bz2", is_flag=True, help="output x.tar.bz2")
@click.option("--tar", is_flag=True, help="onyl package and output x.tar")
@click.option("--zip", "zip_arg", is_flag=True, help="output x.zip")
@click.option("--7z", "p7zip_arg", is_flag=True, help="output x.7z")
@click.option("--debug", is_flag=True, help="debug mode")
@click.argument("args", nargs=-1)
def vzip(tar_gz, tgz, tar_bz2, tar, zip_arg, p7zip_arg, debug, args):
    """
File and directory compression with multiple file extensions.

Example:

\b
```
$ vzip --tar-gz common
[vcmd] compressed common.tar.gz - done
$ vzip --tar-gz common
[vcmd] 'common.tar.gz' already exist, move it to common.tar.gz.2022_07_28_17_09_27 [y(es) - move, n(o) - overwrite]?y
[vcmd] Backup from common.tar.gz to common.tar.gz.2022_07_28_17_09_27
[vcmd] compressed common.tar.gz - done
```
"""
    if debug:
        cmsg.debug(
            f"tar_gz:{tar_gz}, tgz:{tgz}, tar_bz2:{tar_bz2}, tar:{tar}, zip:{zip_arg}, 7z:{p7zip_arg}, debug:{debug}, args:{args}"
        )
    if len(args) == 0:
        cmsg.error("input file/directory missing")
        exit(1)
    if tar_gz or tgz or tar_bz2:
        extension = None
        if tar_gz:
            extension = "tar.gz"
        elif tgz:
            extension = "tgz"
        elif tar_bz2:
            extension = "tar.bz2"
        compress_by_tar(args, extension, debug)
    elif zip_arg or p7zip_arg:
        extension = None
        if zip_arg:
            extension = "zip"
        elif p7zip_arg:
            extension = "7z"
        compress_by_7z(args, extension, debug)
    else:
        cmsg.unknown_option()


if __name__ == "__main__":
    vzip()
