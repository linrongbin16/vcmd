#! /usr/bin/env python3
# -*- coding:utf-8 -*-
# Copyright 2018-  <linrongbin16@gmail.com>

import sys
import os
import time
import click

sys.path.append(".")
import common.sys as csys
import common.msg as cmsg
import common.fs as cfs


def delete_by_ftype(filetype):
    root = os.getcwd()
    files = [os.path.relpath(f, root) for f in cfs.list_files(".")]
    filetype = f".{filetype}"
    for f in files:
        if f.endswith(filetype):
            cmsg.echo(f"remove => {f}")
            os.remove(f)


def list_by_ftype(filetype):
    root = os.getcwd()
    files = [os.path.relpath(f, root) for f in cfs.list_files(".")]
    filetype = f".{filetype}"
    for f in files:
        if f.endswith(filetype):
            cmsg.echo(os.path.relpath(f, root))


@click.command()
@click.option("-l",
              "--list",
              "list_arg",
              required=False,
              help="List files with specified type")
@click.option("-d",
              "--delete",
              "delete_arg",
              required=False,
              help="Delete files with specified type")
@click.option("--debug", is_flag=True, help="debug mode")
def vfty(list_arg, delete_arg, debug):
    """
Recursive file operations.

Example:

\b
```
$ vfty -d log
remove => 2020-11-12-23_03_16.log
remove => 2020-11-12-23_07_30.log
remove => ./testcases/2020-11-12-23_12_51.log
remove => ./testcases/2020-11-12-23_30_07.log
```
    """
    if debug:
        cmsg.debug(
            f"list_arg:{list_arg}, delete_arg:{delete_arg}, debug:{debug}")
    if list_arg:
        list_by_ftype(list_arg)
    elif delete_arg:
        delete_by_ftype(delete_arg)
    else:
        cmsg.unknown_option()


if __name__ == "__main__":
    vfty()
